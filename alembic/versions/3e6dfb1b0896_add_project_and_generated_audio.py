"""add_project_and_generated_audio

Revision ID: 3e6dfb1b0896
Revises: 250ca95737bd
Create Date: 2025-07-16 23:06:31.445382

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3e6dfb1b0896'
down_revision: Union[str, None] = '250ca95737bd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('genre', sa.String(length=50), nullable=True),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('tempo_bpm', sa.Float(), nullable=True),
    sa.Column('key_signature', sa.String(length=10), nullable=True),
    sa.Column('generation_model', sa.String(length=100), nullable=True),
    sa.Column('generation_settings', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('generated_audio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('duration_sec', sa.Float(), nullable=True),
    sa.Column('sample_rate', sa.Integer(), nullable=True),
    sa.Column('channels', sa.Integer(), nullable=True),
    sa.Column('tempo_bpm', sa.Float(), nullable=True),
    sa.Column('key_signature', sa.String(length=10), nullable=True),
    sa.Column('time_signature', sa.Integer(), nullable=True),
    sa.Column('generation_model', sa.String(length=100), nullable=False),
    sa.Column('generation_prompt', sa.Text(), nullable=False),
    sa.Column('source_samples', sa.JSON(), nullable=True),
    sa.Column('generation_settings', sa.JSON(), nullable=True),
    sa.Column('generation_status', sa.String(length=20), nullable=True),
    sa.Column('generation_error', sa.Text(), nullable=True),
    sa.Column('spectral_centroid', sa.Float(), nullable=True),
    sa.Column('spectral_rolloff', sa.Float(), nullable=True),
    sa.Column('zero_crossing_rate', sa.Float(), nullable=True),
    sa.Column('mfcc_features', sa.JSON(), nullable=True),
    sa.Column('rhythm_pattern', sa.JSON(), nullable=True),
    sa.Column('harmonic_content', sa.JSON(), nullable=True),
    sa.Column('loudness', sa.Float(), nullable=True),
    sa.Column('energy', sa.Float(), nullable=True),
    sa.Column('complexity', sa.Float(), nullable=True),
    sa.Column('intensity', sa.Float(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('genre', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generated_audio_id'), 'generated_audio', ['id'], unique=False)
    op.add_column('samples', sa.Column('project_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'samples', 'projects', ['project_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'samples', type_='foreignkey')
    op.drop_column('samples', 'project_id')
    op.drop_index(op.f('ix_generated_audio_id'), table_name='generated_audio')
    op.drop_table('generated_audio')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
